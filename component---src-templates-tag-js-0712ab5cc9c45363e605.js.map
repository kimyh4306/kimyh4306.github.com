{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Tag","_ref","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","console","log","tag","totalCount","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","keywords","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_8__","map","post","tags","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","date","excerpt","techTags","forEach","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_9__","tech","name","size","color","getTechTags","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","pageQuery","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"kPAWMA,EAAM,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KAClBC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OACtCG,QAAQC,IAAIT,EAAYU,KAHW,IAI3BA,EAAQV,EAARU,IACAC,EAAeV,EAAKE,kBAApBQ,WACFC,EAAeD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEMD,EAFN,IAgBf,OACIG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,wEAC5BN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACXP,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAGJR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACXP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,MAAIK,UAAU,WAAWR,IAC3BV,EAAMoB,IAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACIX,EAAAC,EAAAC,cAAA,OAAKY,IAAKJ,EAAKE,KAAKG,GAAIR,UAAU,kBAC9BP,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACIC,GAAIP,EAAKE,KAAKM,OAAOC,KACrBZ,UAAU,aAEVP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,WAAWG,EAAKE,KAAKC,YAAYR,QAEnDL,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qBAAjB,aAAgDG,EAAKE,KAAKC,YAAYO,MAEtEpB,EAAAC,EAAAC,cAAA,KAAGK,UAAU,iBAAiBG,EAAKE,KAAKS,SACxCrB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACIC,GAAIP,EAAKE,KAAKM,OAAOC,KACrBZ,UAAU,gBAEVP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,uBAAjB,oBAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WAzCvB,SAACI,GACjB,IAAMW,EAAW,GAQjB,OAPAX,EAAKY,QAAQ,SAAC1B,EAAK2B,GACfhC,EAAO+B,QAAQ,SAACE,GACR5B,IAAQ4B,EAAM5B,KACdyB,EAASI,KAAK1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASb,IAAKU,EAAG3B,IAAK4B,EAAM5B,IAAK+B,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KAAMC,KAAML,EAAMK,KAAMC,MAAON,EAAMM,aAIvHT,EAiCsBU,CAAYrB,WAWjD1B,EAAIgD,UAAY,CACZ9C,YAAa+C,IAAUC,MAAM,CACzBtC,IAAKqC,IAAUE,OAAOC,aAE1BjD,KAAM8C,IAAUC,MAAM,CAClB7C,kBAAmB4C,IAAUC,MAAM,CAC/BrC,WAAYoC,IAAUI,OAAOD,WAC7B9C,MAAO2C,IAAUK,QACbL,IAAUC,MAAM,CACZvB,KAAMsB,IAAUC,MAAM,CAClBtB,YAAaqB,IAAUC,MAAM,CACzB9B,MAAO6B,IAAUE,OAAOC,iBAGjCA,iBAMZ,IAAMG,EAAS,aAwCPvD,iCCtIf,IAAAwD,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-templates-tag-js-0712ab5cc9c45363e605.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"../pages/index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst Tag = ({ pageContext, data }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n    console.log(pageContext.tag)\r\n    const { tag } = pageContext\r\n    const { totalCount } = data.allMarkdownRemark\r\n    const tagHeader = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"\r\n        } tagged with \"${tag}\"`\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]} />\r\n            <div className=\"index-main\">\r\n                <div className=\"sidebar px-4 py-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"post-list-main\">\r\n                    <i><h2 className=\"heading\">{tagHeader}</h2></i>\r\n                    {posts.map((post) => {\r\n                        const tags = post.node.frontmatter.tags\r\n                        return (\r\n                            <div key={post.node.id} className=\"container mt-5\">\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-dark\"\r\n                                >\r\n                                    <h2 className=\"heading\">{post.node.frontmatter.title}</h2>\r\n                                </Link>\r\n                                <small className=\"d-block text-info\">Posted on {post.node.frontmatter.date}\r\n                                </small>\r\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-primary\"\r\n                                >\r\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                                </Link>\r\n                                <div className=\"d-block\">\r\n                                    {getTechTags(tags)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag: PropTypes.string.isRequired,\r\n    }),\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            totalCount: PropTypes.number.isRequired,\r\n            edges: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node: PropTypes.shape({\r\n                        frontmatter: PropTypes.shape({\r\n                            title: PropTypes.string.isRequired,\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n        siteMetadata {\r\n            title \r\n            author\r\n            labels {\r\n                tag\r\n                tech \r\n                name \r\n                size \r\n                color\r\n            } \r\n        }\r\n    } \r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n         node {\r\n            excerpt(pruneLength: 200)\r\n            html\r\n            id\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"MMMM, YYYY\")\r\n                tags\r\n            }\r\n             fields {\r\n                slug\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tag","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}